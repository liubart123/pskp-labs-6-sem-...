{
  "openapi": "3.0.1",
  "info": {
    "title": "lab31",
    "version": "1.0"
  },
  "paths": {
    "/api/awesome": {
      "get": {
        "tags": [
          "Awesome"
        ],
        "summary": "get all users",
        "responses": {
          "200": {
            "description": "Returns all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Awesome"
        ],
        "summary": "add usar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "everything okk",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "500": {
            "description": "User not addded, servar erorar"
          }
        }
      },
      "put": {
        "tags": [
          "Awesome"
        ],
        "summary": "update usar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "everything okk",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "500": {
            "description": "User not updated"
          }
        }
      }
    },
    "/api/awesome/{id}": {
      "get": {
        "tags": [
          "Awesome"
        ],
        "summary": "get usar by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id... 0_o",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "everything okk",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Awesome"
        ],
        "summary": "delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id... 0_o",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "everything okk...deleted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/ts": {
      "get": {
        "tags": [
          "Phone"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneDictionaryNode"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneDictionaryNode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneDictionaryNode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Phone"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneDictionaryNode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneDictionaryNode"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneDictionaryNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Phone"
        ],
        "parameters": [
          {
            "name": "oldName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneDictionaryNode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneDictionaryNode"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneDictionaryNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Phone"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PhoneDictionaryNode": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Number1": {
            "type": "string",
            "nullable": true
          },
          "Number2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "required": [
          "email",
          "id",
          "password",
          "role",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "user id",
            "format": "int32",
            "example": 1.2121232E+36
          },
          "lastName": {
            "type": "string",
            "description": "user's surname",
            "nullable": true,
            "example": "lojka"
          },
          "firstName": {
            "type": "string",
            "description": "user's firtnsmae",
            "nullable": true,
            "example": "4JI6EPT"
          },
          "email": {
            "type": "string",
            "description": "e-mail usar",
            "example": "lojka@lojka.lojka"
          },
          "password": {
            "type": "string",
            "description": "password usar",
            "example": "228_XxX_lojka_XxX_228"
          },
          "status": {
            "type": "string",
            "description": "activve/passive",
            "example": "active"
          },
          "role": {
            "type": "string",
            "description": "admin/customer/HR",
            "example": "customer"
          }
        },
        "additionalProperties": false
      }
    }
  }
}